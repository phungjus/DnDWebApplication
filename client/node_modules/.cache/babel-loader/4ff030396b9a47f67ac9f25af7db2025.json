{"ast":null,"code":"var _jsxFileName = \"/Users/ko/Developer/CSC309Project/team13/phase1/src/Components/AbilityModifiers/ability-modifiers.jsx\";\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport './ability-modifiers-styles.css';\n\nclass AbilityModifiers extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      abilities: {\n        \"acrobatics\": 1,\n        \"animal handling\": 4,\n        \"arcana\": 3,\n        \"athletics\": 0,\n        \"deception\": 5,\n        \"history\": 3,\n        \"insight\": 4,\n        \"intimidation\": 5,\n        \"investigation\": 3,\n        \"medicine\": 4,\n        \"nature\": 3,\n        \"perception\": 4,\n        \"performance\": 5,\n        \"persuasion\": 5,\n        \"religion\": 3,\n        \"sleight of hand\": 1,\n        \"stealth\": 1,\n        \"survival\": 4\n      },\n      stats: [\"STR\", \"DEX\", \"CON\", \"INT\", \"WIS\", \"CHA\"]\n    };\n\n    this.createAbilityGrid = () => {\n      const grid = [];\n\n      for (var ability in this.state.abilities) {\n        grid.push( /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 6,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Paper, {\n          className: \"ability\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }\n        }, this.props.stats[this.state.abilities[ability]] > 11 ? \"+\" : \"\", Math.floor(this.props.stats[this.state.abilities[ability]] / 2) - 5, \" \", ability.toUpperCase(), \" (\", this.state.stats[this.state.abilities[ability]], \")\")));\n      }\n\n      return grid;\n    };\n\n    this.createSavingGrid = () => {\n      const grid = [];\n\n      for (var i = 0; i < 6; i++) {\n        grid.push( /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 6,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Paper, {\n          className: \"ability\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }\n        }, this.props.stats[i] > 11 ? \"+\" : \"\", Math.floor(this.props.stats[i] / 2) - 5, \" \", this.state.stats[i])));\n      }\n\n      return grid;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ability-mods\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, \"SKILLS\"), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      className: \"grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, this.createAbilityGrid()), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, \"SAVING THROWS\"), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      className: \"grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, this.createSavingGrid()));\n  }\n\n}\n\nexport default AbilityModifiers;","map":{"version":3,"sources":["/Users/ko/Developer/CSC309Project/team13/phase1/src/Components/AbilityModifiers/ability-modifiers.jsx"],"names":["React","Grid","Paper","AbilityModifiers","Component","state","abilities","stats","createAbilityGrid","grid","ability","push","props","Math","floor","toUpperCase","createSavingGrid","i","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport './ability-modifiers-styles.css';\n\nclass AbilityModifiers extends React.Component {\n\n    state = {\n        abilities: {\"acrobatics\": 1, \n                    \"animal handling\": 4, \n                    \"arcana\": 3,\n                    \"athletics\": 0,\n                    \"deception\": 5,\n                    \"history\": 3,\n                    \"insight\": 4,\n                    \"intimidation\": 5,\n                    \"investigation\": 3,\n                    \"medicine\": 4,\n                    \"nature\": 3,\n                    \"perception\": 4,\n                    \"performance\": 5,\n                    \"persuasion\": 5,\n                    \"religion\": 3,\n                    \"sleight of hand\": 1,\n                    \"stealth\": 1,\n                    \"survival\": 4\n                },\n        stats: [\"STR\", \"DEX\", \"CON\", \"INT\", \"WIS\", \"CHA\"]\n    }\n\n    createAbilityGrid = () => {\n        const grid = [];\n        for (var ability in this.state.abilities) {\n            grid.push(\n                <Grid item xs={6}>\n                    <Paper className='ability'>\n                        {(this.props.stats[this.state.abilities[ability]] > 11) ? \"+\":\"\"}\n                        {Math.floor(this.props.stats[this.state.abilities[ability]]/2)-5} {ability.toUpperCase()} ({this.state.stats[this.state.abilities[ability]]})\n                    </Paper>\n                </Grid>\n            )\n        }\n        return grid;\n    }\n\n    createSavingGrid = () => {\n        const grid = [];\n        for (var i = 0; i < 6; i++) {\n            grid.push (\n                <Grid item xs={6}>\n                    <Paper className='ability'>\n                        {(this.props.stats[i] > 11) ? \"+\":\"\"}\n                        {Math.floor(this.props.stats[i]/2)-5} {this.state.stats[i]}\n                    </Paper>\n                </Grid>\n            )\n        }\n        return grid;\n    }\n\n    render() {\n        return (\n            <div className=\"ability-mods\">\n                <h2>SKILLS</h2>\n                <Grid container spacing={3} className='grid'>\n                    {this.createAbilityGrid()}\n                </Grid>\n                <h2>SAVING THROWS</h2>\n                <Grid container spacing={3} className='grid'>\n                    {this.createSavingGrid()}\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default AbilityModifiers;"]},"metadata":{},"sourceType":"module"}