{"ast":null,"code":"var _jsxFileName = \"/Users/ko/Developer/CSC309Project/team13/phase1/src/Components/Group/index.js\";\nimport React from 'react';\nimport Memberlist from '../Memberlist';\nimport Diceroller from '../Diceroller';\nimport Chatbox from '../Chatbox';\nimport { Link } from 'react-router-dom';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport './style.css';\n\nclass Group extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inviteGroupModal: null,\n      leaveGroupModal: null\n    };\n\n    this.handleOpen = modal => {\n      this.setState({\n        [modal]: true\n      });\n    };\n\n    this.handleClose = modal => {\n      this.setState({\n        [modal]: null,\n        copySuccess: null\n      });\n    };\n\n    this.copyToClipboard = event => {\n      document.querySelector('#code').select();\n      document.execCommand('copy');\n      this.setState({\n        copySuccess: true\n      });\n    };\n  }\n\n  render() {\n    if (this.props.userType === \"Admin\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Memberlist, {\n        togglePop: () => this.handleOpen('inviteGroupModal'),\n        startLeaveEvent: () => this.handleOpen('leaveGroupModal'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Chatbox, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Diceroller, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Dialog, {\n        open: this.state.inviteGroupModal,\n        onClose: () => this.handleClose('inviteGroupModal'),\n        \"aria-labelledby\": \"form-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }, \"Invite to Group\"), /*#__PURE__*/React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(DialogContentText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, \"Send this link to your friends to add them to the group!\"), /*#__PURE__*/React.createElement(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        id: \"code\",\n        label: \"Group Code\",\n        ref: textarea => this.textArea = textarea,\n        value: \"bit.ly/dndgroup1234\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(DialogContentText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }\n      }, this.state.copySuccess ? \"Copied!\" : \"\")), /*#__PURE__*/React.createElement(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.handleClose('inviteGroupModal'),\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.copyToClipboard(),\n        type: \"submit\",\n        disabled: this.state.submitDisabled,\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }\n      }, \"Copy Link\"))), /*#__PURE__*/React.createElement(Dialog, {\n        open: this.state.leaveGroupModal,\n        onClose: () => this.handleClose('leaveGroupModal'),\n        \"aria-labelledby\": \"form-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }\n      }, \"Leave Group\"), /*#__PURE__*/React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(DialogContentText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }\n      }, \"Are you sure you want to leave the group?\")), /*#__PURE__*/React.createElement(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.handleClose('leaveGroupModal'),\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }\n      }, \"No\"), /*#__PURE__*/React.createElement(Button, {\n        component: Link,\n        to: '/Grouplist',\n        type: \"submit\",\n        disabled: this.state.submitDisabled,\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }\n      }, \"Yes\"))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Memberlist, {\n        togglePop: () => this.handleOpen('inviteGroupModal'),\n        startLeaveEvent: () => this.handleOpen('leaveGroupModal'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Chatbox, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Diceroller, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Dialog, {\n        open: this.state.inviteGroupModal,\n        onClose: () => this.handleClose('inviteGroupModal'),\n        \"aria-labelledby\": \"form-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }\n      }, \"Invite to Group\"), /*#__PURE__*/React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(DialogContentText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }\n      }, \"Send this link to your friends to add them to the group!\"), /*#__PURE__*/React.createElement(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        id: \"code\",\n        label: \"Group Code\",\n        ref: textarea => this.textArea = textarea,\n        value: \"bit.ly/dndgroup1234\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(DialogContentText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }\n      }, this.state.copySuccess ? \"Copied!\" : \"\")), /*#__PURE__*/React.createElement(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.handleClose('inviteGroupModal'),\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.copyToClipboard(),\n        type: \"submit\",\n        disabled: this.state.submitDisabled,\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }\n      }, \"Copy Link\"))), /*#__PURE__*/React.createElement(Dialog, {\n        open: this.state.leaveGroupModal,\n        onClose: () => this.handleClose('leaveGroupModal'),\n        \"aria-labelledby\": \"form-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }\n      }, \"Leave Group\"), /*#__PURE__*/React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(DialogContentText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }\n      }, \"Are you sure you want to leave the group?\")), /*#__PURE__*/React.createElement(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.handleClose('leaveGroupModal'),\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }\n      }, \"No\"), /*#__PURE__*/React.createElement(Button, {\n        component: Link,\n        to: '/Grouplist',\n        type: \"submit\",\n        disabled: this.state.submitDisabled,\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }\n      }, \"Yes\"))));\n    }\n  }\n\n}\n\nexport default Group;","map":{"version":3,"sources":["/Users/ko/Developer/CSC309Project/team13/phase1/src/Components/Group/index.js"],"names":["React","Memberlist","Diceroller","Chatbox","Link","Menu","MenuItem","IconButton","Button","ButtonBase","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","AddCircleOutlineIcon","Group","Component","state","inviteGroupModal","leaveGroupModal","handleOpen","modal","setState","handleClose","copySuccess","copyToClipboard","event","document","querySelector","select","execCommand","render","props","userType","textarea","textArea","submitDisabled"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Memberlist from '../Memberlist'\nimport Diceroller from '../Diceroller'\nimport Chatbox from '../Chatbox'\nimport { Link } from 'react-router-dom'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport IconButton from '@material-ui/core/IconButton'\nimport Button from '@material-ui/core/Button'\nimport ButtonBase from '@material-ui/core/ButtonBase'\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport './style.css'\n\nclass Group extends React.Component {\n\n    state = {\n        inviteGroupModal: null,\n        leaveGroupModal: null\n    }\n\n    handleOpen = (modal) => {\n        this.setState({\n            [modal]: true\n        })\n    }\n\n    handleClose = (modal) => {\n        this.setState({\n            [modal]: null,\n            copySuccess: null\n        })\n    }\n\n    copyToClipboard = (event) => {\n        document.querySelector('#code').select();\n        document.execCommand('copy');\n        this.setState({ copySuccess: true });\n    };\n\n    render() {\n        if (this.props.userType === \"Admin\") {\n            return (\n                <div className=\"Group\">\n                    <Memberlist\n                        togglePop={() => this.handleOpen('inviteGroupModal')}\n                        startLeaveEvent={() => this.handleOpen('leaveGroupModal')}\n                    />\n                    <Chatbox/>\n                    <Diceroller/>\n                    <Dialog open={this.state.inviteGroupModal} onClose={() => this.handleClose('inviteGroupModal')} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\">Invite to Group</DialogTitle>\n                        <DialogContent>\n                        <DialogContentText>\n                            Send this link to your friends to add them to the group!\n                        </DialogContentText>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"code\"\n                            label=\"Group Code\"\n                            ref={(textarea) => this.textArea = textarea}\n                            value='bit.ly/dndgroup1234'\n                        />\n                        <DialogContentText>{this.state.copySuccess ? \"Copied!\" : \"\"}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                        <Button onClick={() => this.handleClose('inviteGroupModal')} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={() => this.copyToClipboard()} type=\"submit\" disabled={this.state.submitDisabled} color=\"primary\">\n                            Copy Link\n                        </Button>\n                        </DialogActions>\n                    </Dialog>\n\n                    <Dialog open={this.state.leaveGroupModal} onClose={() => this.handleClose('leaveGroupModal')} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\">Leave Group</DialogTitle>\n                        <DialogContent>\n                        <DialogContentText>\n                            Are you sure you want to leave the group?\n                        </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                        <Button onClick={() => this.handleClose('leaveGroupModal')} color=\"primary\">\n                            No\n                        </Button>\n                        <Button component={Link} to={'/Grouplist'} type=\"submit\" disabled={this.state.submitDisabled} color=\"primary\">\n                            Yes\n                        </Button>\n                        </DialogActions>\n                    </Dialog>\n                </div>\n            )\n        }\n        else {\n            return (\n                <div className=\"Group\">\n                    <Memberlist\n                        togglePop={() => this.handleOpen('inviteGroupModal')}\n                        startLeaveEvent={() => this.handleOpen('leaveGroupModal')}\n                    />\n                    <Chatbox/>\n                    <Diceroller/>\n                    <Dialog open={this.state.inviteGroupModal} onClose={() => this.handleClose('inviteGroupModal')} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\">Invite to Group</DialogTitle>\n                        <DialogContent>\n                        <DialogContentText>\n                            Send this link to your friends to add them to the group!\n                        </DialogContentText>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"code\"\n                            label=\"Group Code\"\n                            ref={(textarea) => this.textArea = textarea}\n                            value='bit.ly/dndgroup1234'\n                        />\n                        <DialogContentText>{this.state.copySuccess ? \"Copied!\" : \"\"}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                        <Button onClick={() => this.handleClose('inviteGroupModal')} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={() => this.copyToClipboard()} type=\"submit\" disabled={this.state.submitDisabled} color=\"primary\">\n                            Copy Link\n                        </Button>\n                        </DialogActions>\n                    </Dialog>\n\n                    <Dialog open={this.state.leaveGroupModal} onClose={() => this.handleClose('leaveGroupModal')} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\">Leave Group</DialogTitle>\n                        <DialogContent>\n                        <DialogContentText>\n                            Are you sure you want to leave the group?\n                        </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                        <Button onClick={() => this.handleClose('leaveGroupModal')} color=\"primary\">\n                            No\n                        </Button>\n                        <Button component={Link} to={'/Grouplist'} type=\"submit\" disabled={this.state.submitDisabled} color=\"primary\">\n                            Yes\n                        </Button>\n                        </DialogActions>\n                    </Dialog>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Group;"]},"metadata":{},"sourceType":"module"}