{"ast":null,"code":"var _jsxFileName = \"/Users/ko/Developer/CSC309Project/team13/phase1/src/Components/Forum/Forum.js\";\nimport React, { useCallback, useState } from 'react';\nimport ForumGroups from '../ForumGroups/ForumGroups.js';\nimport ForumPost from '../ForumPosts/ForumPost.js';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Input from '@material-ui/core/Input';\nimport \"./Forum.css\";\nimport { Card, CardContent, Paper } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  latestPost: {\n    fontSize: '20px',\n    fontWeight: 'bold',\n    color: 'var(--textColour)'\n  },\n  forumPostBody: {\n    marginTop: '20px'\n  },\n  Button: {\n    color: 'var(--textColour)',\n    backgroundColor: 'var(--buttonColour)',\n    '&:hover': {\n      backgroundColor: 'var(--buttonColour)'\n    }\n  },\n  multiline: {\n    color: 'var(--textColour)'\n  },\n  cardContent: {\n    backgroundColor: 'var(--backgroundColourSecondary)'\n  }\n}));\nexport default function Forum(props) {\n  const classes = useStyles();\n  const username = props.user;\n  const [title, setTitle] = useState('');\n  const [postContent, setPostContent] = useState('');\n  const date = new Date();\n  const localDate = date.toLocaleDateString('en-US');\n  const localTime = date.toLocaleTimeString('en-US');\n  const time = localTime + \" \" + localDate; // the variable forumPosts would require a server call to to get all the posts that have been made to the\n  // Forum, but here they are hard-coded for Phase 1\n\n  const [forumPosts, setForumPosts] = useState([{\n    username: 'DragonRider12',\n    title: 'Introduction Post',\n    postContent: \"Hi everybody I am currently looking for a game to join. I have experience playing Dungeon's and Dragon's so I can hope right in. Hope to hear from you guys soon!\",\n    comments: [{\n      username: 'OrcMan52',\n      postComment: \"Hey I am willing to join your game\",\n      date: time,\n      cid: 0\n    }, {\n      username: 'DragonRider12',\n      postComment: \"Neat let me send you a private message\",\n      date: time\n    }],\n    pid: 0,\n    date: time,\n    cid: 1\n  }, {\n    username: 'OrcMan52',\n    title: 'Looking for Game',\n    postContent: \"Hi everybody I am currently looking for a game to join. I have experience playing Dungeon's and Dragon's so I can hope right in. Hope to hear from you guys soon!\",\n    comments: [{\n      username: 'DnDMaster',\n      postComment: 'Hey we are starting a new game right now still wanna join?',\n      date: time,\n      cid: 2\n    }],\n    pid: 1,\n    date: time\n  }]);\n  const [showPost, setShowPost] = useState(false);\n  const [pid, setPID] = useState(2);\n  const [cid, setCID] = useState(3);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const newDate = new Date();\n    const postDate = newDate.toLocaleDateString('en-US');\n    const postTime = newDate.toLocaleTimeString('en-US');\n    const dateTime = postTime + \" \" + postDate;\n    const newPostInfo = {\n      username: username,\n      title: title,\n      postContent: postContent,\n      comments: [],\n      pid: pid,\n      date: dateTime\n    };\n    setForumPosts(forumPosts => [newPostInfo, ...forumPosts]);\n    setTitle('');\n    setPostContent('');\n    setShowPost(false);\n    setPID(pid + 1);\n  }\n\n  const handleNewComment = useCallback((username, postComment, postPID, date) => {\n    const shallowCopy = forumPosts.slice();\n    const prevPost = shallowCopy.filter(posts => posts.pid === postPID);\n    const newComment = {\n      username: username,\n      postComment: postComment,\n      date: date,\n      cid: cid\n    };\n    prevPost[0].comments.push(newComment);\n    setCID(cid + 1);\n    setForumPosts(shallowCopy);\n  }, [forumPosts, cid]);\n  const handleDelete = useCallback(pid => {\n    const updatedList = forumPosts.filter(posts => posts.pid !== pid);\n    setForumPosts(updatedList);\n  }, [forumPosts]);\n  const handleDeleteComment = useCallback((pid, cid) => {\n    const shallowCopy = forumPosts.slice();\n    const indexOfComment = shallowCopy.filter(posts => posts.pid === pid)[0].comments.findIndex(comment => comment.cid === cid);\n    shallowCopy.find(posts => posts.pid === pid).comments.splice(indexOfComment, 1);\n    setForumPosts(shallowCopy);\n  }, [forumPosts]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainForum\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    direction: \"row\",\n    alignItems: \"flex-start\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ForumGroups, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    xs: 8,\n    className: classes.forumPostBody,\n    spacing: 2,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    alignItems: \"center\",\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.latestPost,\n    align: \"center\",\n    component: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 31\n    }\n  }, \"Forum Posts\")), /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.Button,\n    variant: \"contained\",\n    onClick: () => setShowPost(!showPost),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 31\n    }\n  }, \"New Post\"))), showPost ? /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    component: \"div\",\n    justify: \"center\",\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.cardContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"newPost\",\n    onSubmit: e => handleSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"postTitle\",\n    variant: \"outline\",\n    fullWidth: true,\n    inputProps: {\n      className: classes.multiline\n    },\n    id: \"postTitle\",\n    autoFocus: true,\n    placeholder: \"Enter Post Title\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"postContent\",\n    multiline: true,\n    inputProps: {\n      className: classes.multiline\n    },\n    rows: 6,\n    placeholder: \"Enter Post's Content\",\n    variant: \"outlined\",\n    fullWidth: true,\n    value: postContent,\n    onChange: e => setPostContent(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    alignItems: \"center\",\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    className: classes.Button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 49\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    className: classes.Button,\n    onClick: () => setShowPost(!showPost),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 49\n    }\n  }, \"Cancel\"))))))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  }), forumPosts.map((posts, i) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    alignItems: \"center\",\n    justify: \"flex-start\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ForumPost, {\n    key: i,\n    title: posts.title,\n    username: posts.username,\n    postContent: posts.postContent,\n    postComments: posts.comments,\n    pid: posts.pid,\n    handleDelete: handleDelete,\n    handleNewComment: handleNewComment,\n    handleDeleteComment: handleDeleteComment,\n    curUser: username,\n    dateTime: posts.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/ko/Developer/CSC309Project/team13/phase1/src/Components/Forum/Forum.js"],"names":["React","useCallback","useState","ForumGroups","ForumPost","Grid","Button","TextField","makeStyles","Typography","Input","Card","CardContent","Paper","useStyles","theme","latestPost","fontSize","fontWeight","color","forumPostBody","marginTop","backgroundColor","multiline","cardContent","Forum","props","classes","username","user","title","setTitle","postContent","setPostContent","date","Date","localDate","toLocaleDateString","localTime","toLocaleTimeString","time","forumPosts","setForumPosts","comments","postComment","cid","pid","showPost","setShowPost","setPID","setCID","handleSubmit","e","preventDefault","newDate","postDate","postTime","dateTime","newPostInfo","handleNewComment","postPID","shallowCopy","slice","prevPost","filter","posts","newComment","push","handleDelete","updatedList","handleDeleteComment","indexOfComment","findIndex","comment","find","splice","className","target","value","map","i"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport ForumGroups from '../ForumGroups/ForumGroups.js';\nimport ForumPost from '../ForumPosts/ForumPost.js';\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Input from '@material-ui/core/Input'\nimport \"./Forum.css\";\nimport { Card, CardContent, Paper } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n\n    latestPost: {\n        fontSize: '20px',\n        fontWeight: 'bold',\n        color: 'var(--textColour)',\n\n    },\n\n    forumPostBody : {\n        marginTop: '20px',\n    },\n\n    Button : {\n        color: 'var(--textColour)',\n        backgroundColor: 'var(--buttonColour)',\n        '&:hover': { backgroundColor: 'var(--buttonColour)' }\n    },\n\n    multiline : {\n        color: 'var(--textColour)'\n    },\n\n    cardContent : {\n        backgroundColor: 'var(--backgroundColourSecondary)'\n    }\n}))\n\nexport default function Forum(props) {\n\n    const classes = useStyles()\n    const username = props.user\n    const [title, setTitle] = useState('')\n    const [postContent, setPostContent] = useState('')\n\n    const date = new Date()\n    const localDate = date.toLocaleDateString('en-US')\n    const localTime = date.toLocaleTimeString('en-US')\n    const time = localTime + \" \" + localDate\n\n    // the variable forumPosts would require a server call to to get all the posts that have been made to the\n    // Forum, but here they are hard-coded for Phase 1\n    const [forumPosts, setForumPosts] = useState([\n        {username: 'DragonRider12', title: 'Introduction Post', postContent: \"Hi everybody I am currently looking for a game to join. I have experience playing Dungeon's and Dragon's so I can hope right in. Hope to hear from you guys soon!\",\n        comments: [{username: 'OrcMan52', postComment: \"Hey I am willing to join your game\", date: time, cid: 0}, {username: 'DragonRider12', postComment: \"Neat let me send you a private message\", date: time}], pid: 0, date: time, cid: 1},\n        {username: 'OrcMan52', title: 'Looking for Game', postContent: \"Hi everybody I am currently looking for a game to join. I have experience playing Dungeon's and Dragon's so I can hope right in. Hope to hear from you guys soon!\",\n        comments: [{username: 'DnDMaster', postComment:'Hey we are starting a new game right now still wanna join?', date: time, cid: 2}], pid: 1, date: time}\n    ])\n\n    const [showPost, setShowPost] = useState(false)\n    const [pid, setPID] = useState(2)\n    const [cid, setCID] = useState(3)\n    \n    function handleSubmit(e) {\n        \n        e.preventDefault();\n        const newDate = new Date()\n        const postDate = newDate.toLocaleDateString('en-US')\n        const postTime = newDate.toLocaleTimeString('en-US')\n        const dateTime = postTime + \" \" + postDate\n        const newPostInfo = { username: username, title: title, postContent: postContent, comments: [], pid: pid, date: dateTime }\n        setForumPosts((forumPosts) => ([newPostInfo, ...forumPosts]))\n        setTitle('')\n        setPostContent('')\n        setShowPost(false)\n        setPID(pid + 1)\n    }\n\n    const handleNewComment = useCallback((username, postComment, postPID, date) => {\n        const shallowCopy = forumPosts.slice()\n        const prevPost = shallowCopy.filter(posts => posts.pid === postPID)\n        const newComment = {username: username, postComment: postComment, date: date, cid: cid}\n        prevPost[0].comments.push(newComment)\n        setCID(cid + 1)\n        setForumPosts(shallowCopy)\n    }, [forumPosts, cid])\n    \n    const handleDelete = useCallback(pid => {\n        const updatedList = forumPosts.filter(posts => posts.pid !== pid)\n        setForumPosts(updatedList)\n    }, [forumPosts])\n\n    const handleDeleteComment = useCallback((pid, cid) => {\n        const shallowCopy = forumPosts.slice()\n        const indexOfComment = shallowCopy.filter(posts => posts.pid === pid)[0].comments.findIndex(comment => comment.cid === cid)\n        shallowCopy.find(posts => posts.pid === pid).comments.splice(indexOfComment, 1)\n        setForumPosts(shallowCopy)\n    }, [forumPosts])\n\n    return (\n        <div className=\"mainForum\">\n            <Grid \n            container \n            spacing={2}\n            direction=\"row\"\n            alignItems=\"flex-start\"\n            justify=\"center\"\n            >\n                <Grid container item xs={3}>\n                    <ForumGroups />\n                </Grid>\n                <Grid item container xs={8} className={classes.forumPostBody} spacing={2} direction=\"row\">\n                    <Grid container item xs={12} alignItems=\"center\" justify=\"space-between\">\n                        <Grid><Typography className={classes.latestPost} align=\"center\" component=\"h1\">Forum Posts</Typography></Grid>\n                        <Grid><Button className={classes.Button} variant=\"contained\" onClick={() => setShowPost(!showPost)}>New Post</Button></Grid>\n                    </Grid>\n                    {showPost ?\n                \n                        <Grid \n                        item \n                        xs={12} \n                        component='div'\n                        justify=\"center\"\n                        alignItems=\"flex-start\"\n                        >\n                            <Card variant=\"outlined\">\n                                <CardContent className={classes.cardContent}>\n                                    <form id=\"newPost\" onSubmit={e => handleSubmit(e)}>\n                                        <Input\n                                        name=\"postTitle\"\n                                        variant=\"outline\"\n                                        fullWidth\n                                        inputProps={{className: classes.multiline}}\n                                        id=\"postTitle\"\n                                        autoFocus\n                                        placeholder=\"Enter Post Title\"\n                                        value={title}\n                                        onChange={e => setTitle(e.target.value)}\n                                        />\n                                        <TextField \n                                        id=\"postContent\"\n                                        multiline\n                                        inputProps={{className: classes.multiline}}\n                                        rows={6}\n                                        placeholder=\"Enter Post's Content\"\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        value={postContent}\n                                        onChange={e => setPostContent(e.target.value)}\n                                        />\n                                        <Grid container item xs={12} alignItems=\"center\" justify=\"space-between\">\n                                            <Grid>\n                                                <Button\n                                                type=\"submit\"\n                                                variant=\"contained\"\n                                                className={classes.Button}\n                                                >\n                                                    Submit\n                                                </Button>\n                                            </Grid>\n                                            <Grid>\n                                                <Button\n                                                variant=\"contained\"\n                                                className={classes.Button}\n                                                onClick={() => setShowPost(!showPost)}>\n                                                    Cancel\n                                                </Button>\n                                            </Grid>\n                                        </Grid>\n                                    </form>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                        : \n                        <div></div>\n                    }\n\n                    {\n                        forumPosts.map((posts, i) => (\n                            \n                            <Grid \n                            item \n                            container\n                            xs={12} \n                            alignItems=\"center\"\n                            justify=\"flex-start\"\n                            direction=\"column\"\n                            >\n                                <ForumPost\n                                    key={i} \n                                    title={posts.title} \n                                    username={posts.username} \n                                    postContent={posts.postContent} \n                                    postComments={posts.comments} \n                                    pid={posts.pid} \n                                    handleDelete={handleDelete}\n                                    handleNewComment={handleNewComment}\n                                    handleDeleteComment={handleDeleteComment}\n                                    curUser={username}\n                                    dateTime={posts.date}\n                                />\n                            </Grid>\n\n                        ))\n                    }\n\n                </Grid>\n                <Grid item xs={1}>\n                    <Paper></Paper>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}