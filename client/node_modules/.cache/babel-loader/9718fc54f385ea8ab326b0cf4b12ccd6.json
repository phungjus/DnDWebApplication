{"ast":null,"code":"var _jsxFileName = \"/Users/ko/Developer/CSC309Project/team13/phase1/src/Components/Group/index.js\";\nimport React from 'react';\nimport Memberlist from '../Memberlist';\nimport Diceroller from '../Diceroller';\nimport Chatbox from '../Chatbox';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport './style.css';\n\nclass Group extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.togglePop = () => {\n      this.setState({\n        seen: !this.state.seen\n      });\n    };\n\n    this.copyToClipboard = event => {\n      this.textArea.select();\n      document.execCommand('copy');\n      event.target.focus();\n      this.setState({\n        copySuccess: 'Copied!'\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Memberlist, {\n      togglePop: this.togglePop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Chatbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Diceroller, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Dialog, {\n      open: this.state.joinGroupModal,\n      onClose: () => this.handleGroupClose('joinGroupModal'),\n      \"aria-labelledby\": \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, \"Join a New Group\"), /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DialogContentText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, \"Send this link to your friends to add them to the group!\"), /*#__PURE__*/React.createElement(TextField, {\n      autoFocus: true,\n      margin: \"dense\",\n      id: \"code\",\n      label: \"Group Code\",\n      ref: textarea => this.textArea = textarea,\n      value: \"bit.ly/dndgroup1234\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.handleGroupClose('joinGroupModal'),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.copyToClipboard(),\n      type: \"submit\",\n      disabled: this.state.submitDisabled,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, \"Join\"))));\n  }\n\n}\n\nexport default Group;","map":{"version":3,"sources":["/Users/ko/Developer/CSC309Project/team13/phase1/src/Components/Group/index.js"],"names":["React","Memberlist","Diceroller","Chatbox","Menu","MenuItem","IconButton","Button","ButtonBase","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","AddCircleOutlineIcon","Group","Component","togglePop","setState","seen","state","copyToClipboard","event","textArea","select","document","execCommand","target","focus","copySuccess","render","joinGroupModal","handleGroupClose","textarea","submitDisabled"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Memberlist from '../Memberlist'\nimport Diceroller from '../Diceroller'\nimport Chatbox from '../Chatbox'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport IconButton from '@material-ui/core/IconButton'\nimport Button from '@material-ui/core/Button'\nimport ButtonBase from '@material-ui/core/ButtonBase'\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport './style.css'\n\nclass Group extends React.Component {\n\n    togglePop = () => {\n        this.setState({\n         seen: !this.state.seen\n        });\n    };\n\n    copyToClipboard = (event) => {\n        this.textArea.select();\n        document.execCommand('copy');\n        event.target.focus();\n        this.setState({ copySuccess: 'Copied!' });\n    };\n\n    render() {\n        return (\n            <div className=\"Group\">\n                <Memberlist\n                    togglePop={this.togglePop}\n                />\n                <Chatbox/>\n                <Diceroller/>\n                <Dialog open={this.state.joinGroupModal} onClose={() => this.handleGroupClose('joinGroupModal')} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Join a New Group</DialogTitle>\n                    <DialogContent>\n                    <DialogContentText>\n                        Send this link to your friends to add them to the group!\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"code\"\n                        label=\"Group Code\"\n                        ref={(textarea) => this.textArea = textarea}\n                        value='bit.ly/dndgroup1234'\n                    />\n                    </DialogContent>\n                    <DialogActions>\n                    <Button onClick={() => this.handleGroupClose('joinGroupModal')} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={() => this.copyToClipboard()} type=\"submit\" disabled={this.state.submitDisabled} color=\"primary\">\n                        Join\n                    </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default Group;"]},"metadata":{},"sourceType":"module"}