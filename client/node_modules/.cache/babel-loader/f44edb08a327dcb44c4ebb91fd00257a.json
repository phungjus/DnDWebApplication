{"ast":null,"code":"var _jsxFileName = \"/Users/ko/Developer/CSC309Project/team13/phase1/src/Components/Group/index.js\";\nimport React from 'react';\nimport Memberlist from '../Memberlist';\nimport Diceroller from '../Diceroller';\nimport Chatbox from '../Chatbox';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport './style.css';\n\nclass Group extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inviteGroupModal: null,\n      leaveGroupModal: null\n    };\n\n    this.handleOpen = modal => {\n      this.setState({\n        [modal]: true\n      });\n    };\n\n    this.handleClose = modal => {\n      this.setState({\n        [modal]: null,\n        copySuccess: null\n      });\n    };\n\n    this.copyToClipboard = event => {\n      document.querySelector('#code').select();\n      document.execCommand('copy');\n      this.setState({\n        copySuccess: true\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Memberlist, {\n      togglePop: () => this.handleOpen('inviteGroupModal'),\n      togglePop: () => this.handleOpen('inviteGroupModal'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Chatbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Diceroller, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Dialog, {\n      open: this.state.inviteGroupModal,\n      onClose: () => this.handleClose('inviteGroupModal'),\n      \"aria-labelledby\": \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, \"Invite to Group\"), /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DialogContentText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, \"Send this link to your friends to add them to the group!\"), /*#__PURE__*/React.createElement(TextField, {\n      autoFocus: true,\n      margin: \"dense\",\n      id: \"code\",\n      label: \"Group Code\",\n      ref: textarea => this.textArea = textarea,\n      value: \"bit.ly/dndgroup1234\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(DialogContentText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, this.state.copySuccess ? \"Copied!\" : \"\")), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.handleClose('inviteGroupModal'),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.copyToClipboard(),\n      type: \"submit\",\n      disabled: this.state.submitDisabled,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, \"Copy Link\"))), /*#__PURE__*/React.createElement(Dialog, {\n      open: this.state.leaveGroupModal,\n      onClose: () => this.handleClose('leaveGroupModal'),\n      \"aria-labelledby\": \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, \"Invite to Group\"), /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DialogContentText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, \"Send this link to your friends to add them to the group!\"), /*#__PURE__*/React.createElement(TextField, {\n      autoFocus: true,\n      margin: \"dense\",\n      id: \"code\",\n      label: \"Group Code\",\n      ref: textarea => this.textArea = textarea,\n      value: \"bit.ly/dndgroup1234\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(DialogContentText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, this.state.copySuccess ? \"Copied!\" : \"\")), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.handleClose('leaveGroupModal'),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.copyToClipboard(),\n      type: \"submit\",\n      disabled: this.state.submitDisabled,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, \"Copy Link\"))));\n  }\n\n}\n\nexport default Group;","map":{"version":3,"sources":["/Users/ko/Developer/CSC309Project/team13/phase1/src/Components/Group/index.js"],"names":["React","Memberlist","Diceroller","Chatbox","Menu","MenuItem","IconButton","Button","ButtonBase","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","AddCircleOutlineIcon","Group","Component","state","inviteGroupModal","leaveGroupModal","handleOpen","modal","setState","handleClose","copySuccess","copyToClipboard","event","document","querySelector","select","execCommand","render","textarea","textArea","submitDisabled"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Memberlist from '../Memberlist'\nimport Diceroller from '../Diceroller'\nimport Chatbox from '../Chatbox'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport IconButton from '@material-ui/core/IconButton'\nimport Button from '@material-ui/core/Button'\nimport ButtonBase from '@material-ui/core/ButtonBase'\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport './style.css'\n\nclass Group extends React.Component {\n\n    state = {\n        inviteGroupModal: null,\n        leaveGroupModal: null\n    }\n\n    handleOpen = (modal) => {\n        this.setState({\n            [modal]: true\n        })\n    }\n\n    handleClose = (modal) => {\n        this.setState({\n            [modal]: null,\n            copySuccess: null\n        })\n    }\n\n    copyToClipboard = (event) => {\n        document.querySelector('#code').select();\n        document.execCommand('copy');\n        this.setState({ copySuccess: true });\n    };\n\n    render() {\n        return (\n            <div className=\"Group\">\n                <Memberlist\n                    togglePop={() => this.handleOpen('inviteGroupModal')}\n                    togglePop={() => this.handleOpen('inviteGroupModal')}\n                />\n                <Chatbox/>\n                <Diceroller/>\n                <Dialog open={this.state.inviteGroupModal} onClose={() => this.handleClose('inviteGroupModal')} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Invite to Group</DialogTitle>\n                    <DialogContent>\n                    <DialogContentText>\n                        Send this link to your friends to add them to the group!\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"code\"\n                        label=\"Group Code\"\n                        ref={(textarea) => this.textArea = textarea}\n                        value='bit.ly/dndgroup1234'\n                    />\n                    <DialogContentText>{this.state.copySuccess ? \"Copied!\" : \"\"}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                    <Button onClick={() => this.handleClose('inviteGroupModal')} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={() => this.copyToClipboard()} type=\"submit\" disabled={this.state.submitDisabled} color=\"primary\">\n                        Copy Link\n                    </Button>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog open={this.state.leaveGroupModal} onClose={() => this.handleClose('leaveGroupModal')} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Invite to Group</DialogTitle>\n                    <DialogContent>\n                    <DialogContentText>\n                        Send this link to your friends to add them to the group!\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"code\"\n                        label=\"Group Code\"\n                        ref={(textarea) => this.textArea = textarea}\n                        value='bit.ly/dndgroup1234'\n                    />\n                    <DialogContentText>{this.state.copySuccess ? \"Copied!\" : \"\"}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                    <Button onClick={() => this.handleClose('leaveGroupModal')} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={() => this.copyToClipboard()} type=\"submit\" disabled={this.state.submitDisabled} color=\"primary\">\n                        Copy Link\n                    </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default Group;"]},"metadata":{},"sourceType":"module"}