{"ast":null,"code":"var _jsxFileName = \"/Users/ko/Developer/CSC309Project/team13/phase1/src/Components/CharacterSheet/character-sheet.jsx\";\nimport React from 'react';\nimport caleb from '../../images/caleb.jpg';\nimport CharacterPanel from '../CharacterPanel/character-panel.jsx';\nimport Stats from '../Stats/stats.jsx';\nimport CharacterHeader from '../CharacterHeader/character-header.jsx';\nimport Diceroller from '../Diceroller/index.js';\nimport './character-sheet-styles.css';\nimport AbilityModifiers from '../AbilityModifiers/ability-modifiers';\n\nclass CharacterSheet extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"Caleb Widogast\",\n      image: caleb,\n      level: 1,\n      race: \"human\",\n      class: \"wizard\",\n      personality: \"Caleb Widogast, born Bren Aldric Ermendrud, is a human wizard and a member of the adventuring party known as the Mighty Nein.\",\n      ideals: \"The character's ideals will be described here.\",\n      bonds: \"The character's bonds will be described here.\",\n      flaws: \"The character's flaws will be described here.\",\n      stats: [8, 18, 11, 13, 9, 7],\n      proficiency: 2,\n      speed: 30,\n      attack: 7,\n      hp: 11,\n      death: 0\n    };\n\n    this.handleStatsChange = statsValue => {\n      this.setState({\n        stats: statsValue\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"character-sheet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CharacterPanel, {\n      image: this.state.image,\n      name: this.state.name,\n      level: this.state.level,\n      race: this.state.race,\n      class: this.state.class,\n      personality: this.state.personality,\n      hp: this.state.hp,\n      ideals: this.state.ideals,\n      bonds: this.state.bonds,\n      flaws: this.state.flaws,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Stats, {\n      stats: this.state.stats,\n      user: this.props.user,\n      onStatsChange: this.handleStatsChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CharacterHeader, {\n      ac: 10 + Math.floor(this.state.stats[1] / 2) - 5,\n      initiative: this.state.stats[1] > 9 ? \"+\".concat(Math.floor(this.state.stats[1] / 2) - 5) : Math.floor(this.state.stats[1] / 2) - 5,\n      speed: this.state.speed,\n      proficiency: this.state.proficiency,\n      attack: this.state.attack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Diceroller, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(AbilityModifiers, {\n      stats: this.state.stats,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default CharacterSheet;","map":{"version":3,"sources":["/Users/ko/Developer/CSC309Project/team13/phase1/src/Components/CharacterSheet/character-sheet.jsx"],"names":["React","caleb","CharacterPanel","Stats","CharacterHeader","Diceroller","AbilityModifiers","CharacterSheet","Component","state","name","image","level","race","class","personality","ideals","bonds","flaws","stats","proficiency","speed","attack","hp","death","handleStatsChange","statsValue","setState","render","props","user","Math","floor","concat"],"mappings":"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","sourcesContent":["import React from 'react';\nimport caleb from '../../images/caleb.jpg';\nimport CharacterPanel from '../CharacterPanel/character-panel.jsx';\nimport Stats from '../Stats/stats.jsx';\nimport CharacterHeader from '../CharacterHeader/character-header.jsx';\nimport Diceroller from '../Diceroller/index.js';\nimport './character-sheet-styles.css';\nimport AbilityModifiers from '../AbilityModifiers/ability-modifiers';\n\nclass CharacterSheet extends React.Component {\n    /* This state is hardcoded for phase 1 but would be retrieved from backend */\n    state = {\n        name: \"Caleb Widogast\",\n        image: caleb,\n        level: 1,\n        race: \"human\",\n        class: \"wizard\",\n        personality: \"Caleb Widogast, born Bren Aldric Ermendrud, is a human wizard and a member of the adventuring party known as the Mighty Nein.\",\n        ideals: \"The character's ideals will be described here.\", \n        bonds: \"The character's bonds will be described here.\",\n        flaws: \"The character's flaws will be described here.\", \n        stats: [8, 18, 11, 13, 9, 7],\n        proficiency: 2,\n        speed: 30,\n        attack: 7,\n        hp: 11,\n        death: 0\n    }\n\n    handleStatsChange = (statsValue) => {\n        this.setState({stats: statsValue});\n      }\n\n    render() {\n        return (\n            <div className=\"character-sheet\">\n                <CharacterPanel \n                    image={this.state.image} \n                    name={this.state.name}\n                    level={this.state.level}\n                    race={this.state.race}\n                    class={this.state.class}\n                    personality={this.state.personality}\n                    hp={this.state.hp}\n                    ideals={this.state.ideals}\n                    bonds={this.state.bonds}\n                    flaws={this.state.flaws}\n                />\n                <Stats\n                    stats={this.state.stats}\n                    user={this.props.user}\n                    onStatsChange={this.handleStatsChange}\n                />\n                <CharacterHeader\n                    ac={10 + Math.floor(this.state.stats[1]/2)-5}\n                    initiative={(this.state.stats[1] > 9) ? \"+\".concat(Math.floor(this.state.stats[1]/2)-5):Math.floor(this.state.stats[1]/2)-5}\n                    speed={this.state.speed}\n                    proficiency={this.state.proficiency}\n                    attack={this.state.attack}\n                />\n                <Diceroller/>\n                <AbilityModifiers stats={this.state.stats}/>\n            </div>\n        )\n    }\n}\n\nexport default CharacterSheet;"]},"metadata":{},"sourceType":"module"}