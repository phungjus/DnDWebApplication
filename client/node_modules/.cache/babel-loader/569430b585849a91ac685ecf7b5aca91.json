{"ast":null,"code":"var _jsxFileName = \"/Users/ko/Developer/CSC309Project/team13/phase1/src/Components/ForumPosts/ForumPost.js\";\nimport React, { useState } from 'react';\nimport \"./ForumPost.css\";\nimport Toggle from \"../Toggle/Toggle.js\";\nimport ForumComments from '../ForumComments/ForumComments';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  box: {\n    left: '0',\n    maxWidth: '75px',\n    maxHeight: '40px',\n    minWidth: '75px',\n    minHeight: '40px'\n  },\n  comment: {\n    marginBottom: '10px'\n  },\n  Button: {\n    color: 'var(--textColour)',\n    backgroundColor: 'var(--buttonColour)',\n    '&:hover': {\n      backgroundColor: 'var(--buttonColour)'\n    }\n  },\n  multilineColor: {\n    color: 'var(--textColour)'\n  },\n  cardContent: {\n    backgroundColor: 'var(--backgroundColourSecondary)'\n  }\n}));\nexport default function ForumPost(props) {\n  const classes = useStyles();\n  const [newComment, setNewComment] = useState(\"\");\n\n  function handleComment(username, comment, pid) {\n    setNewComment(\"\");\n    const date = new Date();\n    const localDate = date.toLocaleDateString('en-US');\n    const localTime = date.toLocaleTimeString('en-US');\n    const time = localTime + \" \" + localDate;\n    props.handleNewComment(username, comment, pid, time);\n  }\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    direction: \"column\",\n    justify: \"flex-start\",\n    alignItems: \"stretch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.cardContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h4\",\n    className: \"postTitle\",\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, props.title), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h4\",\n    className: \"postUser\",\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, \"By: \", props.username, \" @ \", props.dateTime), /*#__PURE__*/React.createElement(Typography, {\n    component: \"p\",\n    className: \"postContent\",\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, props.postContent), /*#__PURE__*/React.createElement(Toggle, {\n    title: \"Show Comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, props.postComments.map((comments, i) => /*#__PURE__*/React.createElement(ForumComments, {\n    username: comments.username,\n    commentContent: comments.postComment,\n    dateTime: comments.date,\n    key: i,\n    handleDeleteComment: props.handleDeleteComment,\n    pid: props.pid,\n    cid: comments.cid,\n    curUser: props.curUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.comment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.cardContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"postContent\",\n    multiline: true,\n    inputProps: {\n      className: classes.multilineColor\n    },\n    rows: 6,\n    placeholder: \"Enter Comment\",\n    variant: \"outlined\",\n    fullWidth: true,\n    value: newComment,\n    onChange: e => setNewComment(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    className: classes.Button,\n    fullWidth: true,\n    onClick: () => handleComment(props.curUser, newComment, props.pid),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 37\n    }\n  }, \"Submit\"))))), props.curUser === props.username || props.curUser === 'admin' ? /*#__PURE__*/React.createElement(Box, {\n    component: \"div\",\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    className: classes.Button,\n    onClick: () => props.handleDelete(props.pid),\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  }, \"Delete\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/ko/Developer/CSC309Project/team13/phase1/src/Components/ForumPosts/ForumPost.js"],"names":["React","useState","Toggle","ForumComments","Grid","Card","CardContent","Typography","Button","TextField","makeStyles","Box","useStyles","theme","box","left","maxWidth","maxHeight","minWidth","minHeight","comment","marginBottom","color","backgroundColor","multilineColor","cardContent","ForumPost","props","classes","newComment","setNewComment","handleComment","username","pid","date","Date","localDate","toLocaleDateString","localTime","toLocaleTimeString","time","handleNewComment","title","dateTime","postContent","postComments","map","comments","i","postComment","handleDeleteComment","cid","curUser","className","e","target","value","handleDelete"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport \"./ForumPost.css\";\nimport Toggle from \"../Toggle/Toggle.js\";\nimport ForumComments from '../ForumComments/ForumComments';\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    box: {\n        left: '0',\n        maxWidth: '75px',\n        maxHeight: '40px',\n        minWidth: '75px',\n        minHeight: '40px',\n    },\n\n    comment : {\n        marginBottom: '10px'\n    },\n\n    Button : {\n        color: 'var(--textColour)',\n        backgroundColor: 'var(--buttonColour)',\n        '&:hover': { backgroundColor: 'var(--buttonColour)' },\n    },\n\n    multilineColor: {\n        color: 'var(--textColour)'\n    },\n\n    cardContent : {\n        backgroundColor: 'var(--backgroundColourSecondary)'\n    }\n}))\n\n\nexport default function ForumPost(props) {\n\n    const classes = useStyles()\n\n    const [newComment, setNewComment] = useState(\"\")\n\n    function handleComment(username, comment, pid) {\n        setNewComment(\"\")\n        const date = new Date()\n        const localDate = date.toLocaleDateString('en-US')\n        const localTime = date.toLocaleTimeString('en-US')\n        const time = localTime + \" \" + localDate\n        props.handleNewComment(username, comment, pid, time)\n    }\n\n    return(\n\n        <Grid \n        container \n        item \n        xs={12}\n        direction=\"column\"\n        justify=\"flex-start\"\n        alignItems=\"stretch\"\n        >\n            <Card variant=\"outlined\">\n                <CardContent className={classes.cardContent}>\n                    <Typography component=\"h4\" className='postTitle' align=\"left\">{props.title}</Typography>\n                    <Typography component=\"h4\" className='postUser' align=\"left\">By: {props.username} @ {props.dateTime}</Typography>\n                    <Typography component=\"p\" className='postContent' align=\"left\">{props.postContent}</Typography>\n                    <Toggle title=\"Show Comments\">\n                        <Grid item xs={12} component=\"div\">\n                            {\n                                props.postComments.map((comments, i) => (\n                                    <ForumComments \n                                    username={comments.username} \n                                    commentContent={comments.postComment} \n                                    dateTime={comments.date} \n                                    key={i} \n                                    handleDeleteComment={props.handleDeleteComment} \n                                    pid={props.pid}\n                                    cid={comments.cid} \n                                    curUser={props.curUser}/>\n                                ))\n                            }\n                        </Grid>\n                        <Grid item xs={12} className={classes.comment}>\n                            <Card variant=\"outlined\">\n                                <CardContent className={classes.cardContent}>\n                                    <TextField \n                                    id=\"postContent\"\n                                    multiline\n                                    inputProps={{className: classes.multilineColor}}\n                                    rows={6}\n                                    placeholder=\"Enter Comment\"\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    value={newComment}\n                                    onChange={e => setNewComment(e.target.value)}\n                                    />\n                                    <Button\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    className={classes.Button}\n                                    fullWidth\n                                    onClick={() => handleComment(props.curUser, newComment, props.pid)}\n                                    >\n                                        Submit\n                                    </Button>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                    </Toggle>\n                    {\n                        (props.curUser === props.username || props.curUser === 'admin') \n                        ?\n                        <Box component=\"div\" className={classes.box}>\n                            <Button variant=\"contained\" className={classes.Button} onClick={() => props.handleDelete(props.pid)} fullWidth>\n                                Delete\n                            </Button>\n                        </Box>\n                        :\n                        <div></div>\n                    }\n                </CardContent>\n            </Card>\n        </Grid>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}