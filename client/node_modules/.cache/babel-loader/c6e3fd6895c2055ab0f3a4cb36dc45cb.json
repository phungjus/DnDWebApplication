{"ast":null,"code":"var _jsxFileName = \"/Users/ko/Developer/CSC309Project/team13/phase1/src/Components/Forum/Forum.js\";\nimport React, { useCallback, useState } from 'react';\nimport ForumGroups from '../ForumGroups/ForumGroups.js';\nimport ForumPost from '../ForumPosts/ForumPost.js';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Input from '@material-ui/core/Input';\nimport \"./Forum.css\";\nimport { Paper } from '@material-ui/core';\n{\n  /* ToDO: */\n}\n{\n  /* Add a Time Stamp to all Posts and Comments (note: it would be easier if each post has a dateTime stamp as a state) */\n}\n{\n  /* DONE: Add in the page redirects */\n}\n{\n  /* DONE: Update the color scheme to be consistent throughout the application */\n}\n{\n  /* DONE: Add Material-UI to the View */\n}\n{\n  /* Add Comments refering to places where data needs to be called */\n}\n{\n  /* Update the README.md file with instructions about how to use the Web Application */\n}\nconst useStyles = makeStyles(theme => ({\n  latestPost: {\n    fontSize: '20px',\n    fontWeight: 'bold',\n    color: '#0b0200'\n  },\n  forumPostBody: {\n    marginTop: '20px'\n  },\n  submitBtn: {},\n  Button: {\n    maxWidth: '75px',\n    maxHeight: '45px',\n    minWidth: '75px',\n    minHeight: '45px',\n    color: '#0b0200',\n    backgroundColor: '#b95c0d',\n    '&:hover': {\n      backgroundColor: '#b95c0d'\n    },\n    left: '0px'\n  },\n  fields: {\n    backgroundColor: '#2c2f33',\n    color: '#ff0000'\n  }\n}));\nexport default function Forum(props) {\n  const classes = useStyles();\n  const [username, setUsername] = useState('admin');\n  const [title, setTitle] = useState('');\n  const [postContent, setPostContent] = useState('');\n  const [forumPosts, setForumPosts] = useState([{\n    username: 'DragonRider12',\n    title: 'Introduction Post',\n    postContent: \"Hi everybody I am currently looking for a game to join. I have experience playing Dungeon's and Dragon's so I can hope right in. Hope to hear from you guys soon!\",\n    comments: [{\n      username: 'OrcMan52',\n      postComment: \"Hey I am willing to join your game\"\n    }, {\n      username: 'DragonRider12',\n      postComment: \"Neat let me send you a private message\"\n    }],\n    pid: 0\n  }, {\n    username: 'OrcMan52',\n    title: 'Looking for Game',\n    postContent: \"Hi everybody I am currently looking for a game to join. I have experience playing Dungeon's and Dragon's so I can hope right in. Hope to hear from you guys soon!\",\n    comments: [{\n      username: 'DnDMaster',\n      postComment: 'Hey we are starting a new game right now still wanna join?'\n    }],\n    pid: 1\n  }]);\n  const [showPost, setShowPost] = useState(false);\n  const [pid, setPID] = useState(2);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const newPostInfo = {\n      username: username,\n      title: title,\n      postContent: postContent,\n      comments: [],\n      pid: pid\n    };\n    setForumPosts(forumPosts => [newPostInfo, ...forumPosts]);\n    setTitle('');\n    setPostContent('');\n    setShowPost(false);\n    setPID(pid + 1);\n  }\n\n  const handleNewComment = useCallback((username, postComment, postPID) => {\n    const shallowCopy = forumPosts.slice();\n    const prevPost = forumPosts.filter(posts => posts.pid === postPID);\n    const newComment = {\n      username: username,\n      postComment: postComment\n    };\n    prevPost[0].comments.push(newComment);\n    setForumPosts(shallowCopy);\n  }, [forumPosts]);\n  const handleDelete = useCallback(pid => {\n    const updatedList = forumPosts.filter(posts => posts.pid !== pid);\n    setForumPosts(updatedList);\n  }, [forumPosts]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainForum\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    direction: \"row\",\n    alignItems: \"flex-start\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ForumGroups, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    xs: 8,\n    className: classes.forumPostBody,\n    spacing: 2,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    alignItems: \"center\",\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.latestPost,\n    align: \"center\",\n    component: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 31\n    }\n  }, \"Forum Posts\")), /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.Button,\n    variant: \"contained\",\n    onClick: () => setShowPost(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 31\n    }\n  }, \"New Post\"))), showPost ? /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    component: \"div\",\n    justify: \"center\",\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"newPost\",\n    onSubmit: e => handleSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: classes.fields,\n    name: \"postTitle\",\n    variant: \"outline\",\n    fullWidth: true,\n    id: \"postTitle\",\n    autoFocus: true,\n    placeholder: \"Enter Post Title\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    className: classes.fields,\n    id: \"postContent\",\n    multiline: true,\n    rows: 6,\n    placeholder: \"Enter Post's Content\",\n    variant: \"outlined\",\n    fullWidth: true,\n    value: postContent,\n    onChange: e => setPostContent(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    className: classes.submitBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 33\n    }\n  }, \"Submit\"))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }\n  }), forumPosts.map((posts, i) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    alignItems: \"center\",\n    justify: \"flex-start\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ForumPost, {\n    key: i,\n    title: posts.title,\n    username: posts.username,\n    postContent: posts.postContent,\n    postComments: posts.comments,\n    pid: posts.pid,\n    handleDelete: handleDelete,\n    handleNewComment: handleNewComment,\n    curUser: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 21\n    }\n  }))));\n} // class Forum extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n// forumPosts : [\n//     {username: 'DragonRider12', title: 'Introduction Post', postContent: \"Hi everybody I am currently looking for a game to join. I have experience playing Dungeon's and Dragon's so I can hope right in. Hope to hear from you guys soon!\"},\n//     {username: 'OrcMan52', title: 'Looking for Game', postContent: \"Hi everybody I am currently looking for a game to join. I have experience playing Dungeon's and Dragon's so I can hope right in. Hope to hear from you guys soon!\"}\n// ],\n//             showPost: false,\n//             newPostUsername: 'Me',\n//             newPostTitle: '',\n//             newPostContent: ''\n//         }\n//         this.handleNewPost = this.handleNewPost.bind(this);\n//         this.handleNewTitle = this.handleNewTitle.bind(this);\n//         this.handleNewPostContent = this.handleNewPostContent.bind(this);\n//         this.handleSubmit = this.handleSubmit.bind(this);\n//     }\n//     handleNewPost() {\n//         this.setState({showPost: true})\n//     }\n//     handleNewTitle(e) {\n//         // console.log(e.target.value)\n//         this.setState({newPostTitle: e.target.value}, () => console.log(\"titleUpdated\"))\n//     }\n//     handleNewPostContent(e) {\n//         this.setState({newPostContent: e.target.value}, () => console.log(\"postContentUpdated\"))\n//     }\n//     handleSubmit(e) {\n//         e.preventDefault();\n//         const newPost = [{username: this.newPostUsername, title: this.newPostTitle, postContent: this.newPostContent}]\n//         console.log(newPost)\n//         // this.setState(state => {\n//         //     const list = [ newPost, ...state.forumPosts ]\n//         // })\n//         this.setState({forumPosts: [newPost, ... this.state.forumPosts]})\n//         console.log(this.state.forumPosts)\n//         // const newPosts = this.state.forumPosts.concat([{username: this.newPostUsername, title: this.newPostTitle, postContent: this.newPostContent}])\n//         // console.log(newPosts)\n//         // this.setState({forumPosts : newPosts})\n//         // console.log(this.state.forumPosts)\n//     }\n//     render() {\n//         return (\n//             <div className=\"mainForum\">\n//                 <ForumHeader />\n//                 <ForumGroups />\n//                 <ForumMenu />\n//                 <div className=\"forumPostBody\">\n//                     <h1>Latest Posts <button className=\"button\" onClick={this.handleNewPost}>New Post</button></h1>\n//                     <div className=\"forumBody\">\n//                         {/* ToDO: */}\n//                         {/* Add functionality to the New Post Button */}\n//                         {/* Add an option to comment on each Post */}\n//                         {/* Add functionality to the Groups section of the page */}\n//                         {/* Remember to create another view dedicated to the Admin\n//                          (i.e. the ability to delete posts) */}\n//                         {/* DONE: Add in a ForumPost Component Later it should take in\n//                         3 variables: postTitle, postUser, and postContent. Don't forget\n//                         each post requires a timestamp along with it */}\n//                         {/* Add in a PostComment Component later it should also take in\n//                         2 variables: commentUser, and commentContent. Don't forget each post\n//                         requires a timestamp along with it*/}\n//                         {/* Add in the page redirects */}\n//                         {this.state.showPost ? \n//                             <div className=\"newPostDiv\">\n//                                 <form id=\"newPost\" onSubmit={this.handleSubmit}>\n//                                     <label htmlFor=\"postTitle\">Title:</label><br />\n//                                     <input type=\"text\" id=\"postTitle\" name=\"postTitle\" value={this.state.newPostTitle} onChange={this.handleNewTitle}/> <br />\n//                                     <textarea name=\"postContent\" form=\"newPost\" rows=\"6\" cols=\"80\" value={this.state.newPostContent} onChange={this.handleNewPostContent}/>\n//                                     <input type=\"submit\" />\n//                                 </form> \n//                             </div> \n//                             : \n//                             <div></div>\n//                             }\n//                         {\n//                             this.state.forumPosts.map((posts) => (\n//                                 <ForumPost title={posts.title} username={posts.username} postContent={posts.postContent}/>\n//                             ))\n//                         }\n//                     </div>\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n// export default Forum;","map":{"version":3,"sources":["/Users/ko/Developer/CSC309Project/team13/phase1/src/Components/Forum/Forum.js"],"names":["React","useCallback","useState","ForumGroups","ForumPost","Grid","Button","TextField","makeStyles","Typography","Input","Paper","useStyles","theme","latestPost","fontSize","fontWeight","color","forumPostBody","marginTop","submitBtn","maxWidth","maxHeight","minWidth","minHeight","backgroundColor","left","fields","Forum","props","classes","username","setUsername","title","setTitle","postContent","setPostContent","forumPosts","setForumPosts","comments","postComment","pid","showPost","setShowPost","setPID","handleSubmit","e","preventDefault","newPostInfo","handleNewComment","postPID","shallowCopy","slice","prevPost","filter","posts","newComment","push","handleDelete","updatedList","target","value","map","i"],"mappings":"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AAChB,QALxB;AAMI,IAAA,GAAG,EAAEgB,KAAK,CAACd,GANf;AAOI,IAAA,YAAY,EAAEiB,YAPlB;AAQI,IAAA,gBAAgB,EAAET,gBARtB;AASI,IAAA,OAAO,EAAElB,QATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CAFJ,CApDR,CAVJ,eAyFI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAzFJ,CADJ,CADJ;AAmGH,C,CAGD;AAEA;AACA;AACA;AACY;AACA;AACA;AACA;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport ForumGroups from '../ForumGroups/ForumGroups.js';\nimport ForumPost from '../ForumPosts/ForumPost.js';\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Input from '@material-ui/core/Input'\nimport \"./Forum.css\";\nimport { Paper } from '@material-ui/core';\n\n\n{/* ToDO: */}\n\n{/* Add a Time Stamp to all Posts and Comments (note: it would be easier if each post has a dateTime stamp as a state) */}\n{/* DONE: Add in the page redirects */}\n{/* DONE: Update the color scheme to be consistent throughout the application */}\n{/* DONE: Add Material-UI to the View */}\n{/* Add Comments refering to places where data needs to be called */}\n{/* Update the README.md file with instructions about how to use the Web Application */}\n\nconst useStyles = makeStyles((theme) => ({\n\n    latestPost: {\n        fontSize: '20px',\n        fontWeight: 'bold',\n        color: '#0b0200',\n\n    },\n\n    forumPostBody : {\n        marginTop: '20px',\n    },\n\n    submitBtn: {\n    },\n\n    Button : {\n        maxWidth: '75px',\n        maxHeight: '45px',\n        minWidth: '75px',\n        minHeight: '45px',\n        color: '#0b0200',\n        backgroundColor: '#b95c0d',\n        '&:hover': { backgroundColor: '#b95c0d' },\n        left: '0px'\n    },\n\n    fields : {\n        backgroundColor: '#2c2f33',\n        color: '#ff0000'\n    }\n}))\n\nexport default function Forum(props) {\n\n    const classes = useStyles()\n\n    const [username, setUsername] = useState('admin')\n    const [title, setTitle] = useState('')\n    const [postContent, setPostContent] = useState('')\n    const [forumPosts, setForumPosts] = useState([\n        {username: 'DragonRider12', title: 'Introduction Post', postContent: \"Hi everybody I am currently looking for a game to join. I have experience playing Dungeon's and Dragon's so I can hope right in. Hope to hear from you guys soon!\",\n        comments: [{username: 'OrcMan52', postComment: \"Hey I am willing to join your game\"}, {username: 'DragonRider12', postComment: \"Neat let me send you a private message\"}], pid: 0},\n        {username: 'OrcMan52', title: 'Looking for Game', postContent: \"Hi everybody I am currently looking for a game to join. I have experience playing Dungeon's and Dragon's so I can hope right in. Hope to hear from you guys soon!\",\n        comments: [{username: 'DnDMaster', postComment:'Hey we are starting a new game right now still wanna join?'}], pid: 1}\n    ])\n    const [showPost, setShowPost] = useState(false)\n    const [pid, setPID] = useState(2)\n\n    \n    function handleSubmit(e) {\n        \n        e.preventDefault();\n        const newPostInfo = { username: username, title: title, postContent: postContent, comments: [], pid: pid }\n        setForumPosts((forumPosts) => ([newPostInfo, ...forumPosts]))\n        setTitle('')\n        setPostContent('')\n        setShowPost(false)\n        setPID(pid + 1)\n    }\n\n    const handleNewComment = useCallback((username, postComment, postPID) => {\n        const shallowCopy = forumPosts.slice()\n        const prevPost = forumPosts.filter(posts => posts.pid === postPID)\n        const newComment = {username: username, postComment: postComment}\n        prevPost[0].comments.push(newComment)\n        setForumPosts(shallowCopy)\n    }, [forumPosts])\n    \n    const handleDelete = useCallback(pid => {\n        const updatedList = forumPosts.filter(posts => posts.pid !== pid)\n        setForumPosts(updatedList)\n    }, [forumPosts])\n\n    return (\n        <div className=\"mainForum\">\n            <Grid \n            container \n            spacing={2}\n            direction=\"row\"\n            alignItems=\"flex-start\"\n            justify=\"center\"\n            >\n                <Grid container item xs={3}>\n                    <ForumGroups />\n                </Grid>\n                <Grid item container xs={8} className={classes.forumPostBody} spacing={2} direction=\"row\">\n                    <Grid container item xs={12} alignItems=\"center\" justify=\"space-between\">\n                        <Grid><Typography className={classes.latestPost} align=\"center\" component=\"h1\">Forum Posts</Typography></Grid>\n                        <Grid><Button className={classes.Button} variant=\"contained\" onClick={() => setShowPost(true)}>New Post</Button></Grid>\n                    </Grid>\n                    {showPost ?\n                \n                        <Grid \n                        item \n                        xs={12} \n                        component='div'\n                        justify=\"center\"\n                        alignItems=\"flex-start\"\n                        >\n\n                            <form id=\"newPost\" onSubmit={e => handleSubmit(e)}>\n                                <Input\n                                className={classes.fields}\n                                name=\"postTitle\"\n                                variant=\"outline\"\n                                fullWidth\n                                id=\"postTitle\"\n                                autoFocus\n                                placeholder=\"Enter Post Title\"\n                                value={title}\n                                onChange={e => setTitle(e.target.value)}\n                                />\n                                <TextField \n                                className={classes.fields}\n                                id=\"postContent\"\n                                multiline\n                                rows={6}\n                                placeholder=\"Enter Post's Content\"\n                                variant=\"outlined\"\n                                fullWidth\n                                value={postContent}\n                                onChange={e => setPostContent(e.target.value)}\n                                />\n                                <Button\n                                type=\"submit\"\n                                variant=\"contained\"\n                                className={classes.submitBtn}\n                                >\n                                    Submit\n                                </Button>\n                            </form>\n                        </Grid>\n                        : \n                        <div></div>\n                    }\n\n                    {\n                        forumPosts.map((posts, i) => (\n                            \n                            <Grid \n                            item \n                            container\n                            xs={12} \n                            alignItems=\"center\"\n                            justify=\"flex-start\"\n                            direction=\"column\"\n                            >\n                                <ForumPost\n                                    key={i} \n                                    title={posts.title} \n                                    username={posts.username} \n                                    postContent={posts.postContent} \n                                    postComments={posts.comments} \n                                    pid={posts.pid} \n                                    handleDelete={handleDelete}\n                                    handleNewComment={handleNewComment}\n                                    curUser={username}\n                                />\n                            </Grid>\n\n                        ))\n                    }\n\n                </Grid>\n                <Grid item xs={1}>\n                    <Paper></Paper>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n\n}\n\n\n// class Forum extends React.Component {\n\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n            // forumPosts : [\n            //     {username: 'DragonRider12', title: 'Introduction Post', postContent: \"Hi everybody I am currently looking for a game to join. I have experience playing Dungeon's and Dragon's so I can hope right in. Hope to hear from you guys soon!\"},\n            //     {username: 'OrcMan52', title: 'Looking for Game', postContent: \"Hi everybody I am currently looking for a game to join. I have experience playing Dungeon's and Dragon's so I can hope right in. Hope to hear from you guys soon!\"}\n            // ],\n//             showPost: false,\n//             newPostUsername: 'Me',\n//             newPostTitle: '',\n//             newPostContent: ''\n//         }\n//         this.handleNewPost = this.handleNewPost.bind(this);\n//         this.handleNewTitle = this.handleNewTitle.bind(this);\n//         this.handleNewPostContent = this.handleNewPostContent.bind(this);\n//         this.handleSubmit = this.handleSubmit.bind(this);\n//     }\n\n//     handleNewPost() {\n//         this.setState({showPost: true})\n//     }\n\n//     handleNewTitle(e) {\n//         // console.log(e.target.value)\n//         this.setState({newPostTitle: e.target.value}, () => console.log(\"titleUpdated\"))\n//     }\n\n//     handleNewPostContent(e) {\n//         this.setState({newPostContent: e.target.value}, () => console.log(\"postContentUpdated\"))\n//     }\n\n//     handleSubmit(e) {\n//         e.preventDefault();\n//         const newPost = [{username: this.newPostUsername, title: this.newPostTitle, postContent: this.newPostContent}]\n//         console.log(newPost)\n//         // this.setState(state => {\n//         //     const list = [ newPost, ...state.forumPosts ]\n//         // })\n//         this.setState({forumPosts: [newPost, ... this.state.forumPosts]})\n\n//         console.log(this.state.forumPosts)\n//         // const newPosts = this.state.forumPosts.concat([{username: this.newPostUsername, title: this.newPostTitle, postContent: this.newPostContent}])\n//         // console.log(newPosts)\n//         // this.setState({forumPosts : newPosts})\n//         // console.log(this.state.forumPosts)\n//     }\n\n//     render() {\n//         return (\n//             <div className=\"mainForum\">\n//                 <ForumHeader />\n//                 <ForumGroups />\n//                 <ForumMenu />\n//                 <div className=\"forumPostBody\">\n//                     <h1>Latest Posts <button className=\"button\" onClick={this.handleNewPost}>New Post</button></h1>\n//                     <div className=\"forumBody\">\n                        \n//                         {/* ToDO: */}\n\n//                         {/* Add functionality to the New Post Button */}\n\n//                         {/* Add an option to comment on each Post */}\n\n//                         {/* Add functionality to the Groups section of the page */}\n\n//                         {/* Remember to create another view dedicated to the Admin\n//                          (i.e. the ability to delete posts) */}\n\n//                         {/* DONE: Add in a ForumPost Component Later it should take in\n//                         3 variables: postTitle, postUser, and postContent. Don't forget\n//                         each post requires a timestamp along with it */}\n                        \n//                         {/* Add in a PostComment Component later it should also take in\n//                         2 variables: commentUser, and commentContent. Don't forget each post\n//                         requires a timestamp along with it*/}\n\n//                         {/* Add in the page redirects */}\n\n//                         {this.state.showPost ? \n//                             <div className=\"newPostDiv\">\n//                                 <form id=\"newPost\" onSubmit={this.handleSubmit}>\n//                                     <label htmlFor=\"postTitle\">Title:</label><br />\n//                                     <input type=\"text\" id=\"postTitle\" name=\"postTitle\" value={this.state.newPostTitle} onChange={this.handleNewTitle}/> <br />\n//                                     <textarea name=\"postContent\" form=\"newPost\" rows=\"6\" cols=\"80\" value={this.state.newPostContent} onChange={this.handleNewPostContent}/>\n//                                     <input type=\"submit\" />\n//                                 </form> \n//                             </div> \n//                             : \n//                             <div></div>\n//                             }\n\n//                         {\n//                             this.state.forumPosts.map((posts) => (\n//                                 <ForumPost title={posts.title} username={posts.username} postContent={posts.postContent}/>\n//                             ))\n//                         }\n\n//                     </div>\n//                 </div>\n//             </div>\n//         )\n//     }\n\n// }\n\n// export default Forum;"]},"metadata":{},"sourceType":"module"}